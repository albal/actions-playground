name: Complex Build Pipeline

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target deployment environment'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production
      skip_tests:
        description: 'Skip test phase'
        required: false
        default: false
        type: boolean
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  # =============================================================================
  # SETUP PHASE - Individual reusable workflows
  # =============================================================================

  environment-setup:
    name: Environment Setup
    uses: ./.github/workflows/environment-setup-reusable.yml

  dependency-cache:
    name: Dependency Cache
    uses: ./.github/workflows/dependency-cache-reusable.yml

  code-quality:
    name: Code Quality Check
    uses: ./.github/workflows/code-quality-reusable.yml

  # =============================================================================
  # BUILD PHASE - Individual reusable workflows
  # =============================================================================

  frontend-build:
    name: Frontend Build
    uses: ./.github/workflows/frontend-build-reusable.yml
    needs: [environment-setup, dependency-cache, code-quality]
    with:
      build-version: ${{ needs.environment-setup.outputs.build-version }}

  backend-build:
    name: Backend Build
    uses: ./.github/workflows/backend-build-reusable.yml
    needs: [environment-setup, dependency-cache, code-quality]
    with:
      build-version: ${{ needs.environment-setup.outputs.build-version }}

  database-build:
    name: Database Build
    uses: ./.github/workflows/database-build-reusable.yml
    needs: [environment-setup, dependency-cache, code-quality]
    with:
      build-version: ${{ needs.environment-setup.outputs.build-version }}

  # =============================================================================
  # TEST PHASE - Individual reusable workflows
  # =============================================================================

  unit-tests:
    name: Unit Tests
    uses: ./.github/workflows/unit-tests-reusable.yml
    needs: [frontend-build, backend-build, database-build]
    with:
      skip-tests: ${{ inputs.skip_tests || false }}

  integration-tests:
    name: Integration Tests
    uses: ./.github/workflows/integration-tests-reusable.yml
    needs: [frontend-build, backend-build, database-build]
    with:
      skip-tests: ${{ inputs.skip_tests || false }}

  e2e-tests:
    name: End-to-End Tests
    uses: ./.github/workflows/e2e-tests-reusable.yml
    needs: [frontend-build, backend-build, database-build]
    with:
      skip-tests: ${{ inputs.skip_tests || false }}

  # =============================================================================
  # PACKAGE PHASE - Individual reusable workflows
  # =============================================================================

  package-application:
    name: Package Application
    uses: ./.github/workflows/package-application-reusable.yml
    needs: [unit-tests, integration-tests, e2e-tests, environment-setup]
    if: ${{ !cancelled() && (success() || inputs.skip_tests) }}
    with:
      build-version: ${{ needs.environment-setup.outputs.build-version }}

  generate-documentation:
    name: Generate Documentation
    uses: ./.github/workflows/generate-documentation-reusable.yml
    needs: [unit-tests, integration-tests, e2e-tests]
    if: ${{ !cancelled() && (success() || inputs.skip_tests) }}

  # =============================================================================
  # DEPLOY PHASE - Individual reusable workflows
  # =============================================================================

  deploy-application:
    name: Deploy Application
    uses: ./.github/workflows/deploy-application-reusable.yml
    needs: [package-application]
    with:
      package-version: ${{ needs.package-application.outputs.package-version }}
      environment: ${{ inputs.environment || 'staging' }}
